openapi: 3.0.1
info:
  title: Customers
  description: API for managing customer data.
  version: 1.0.0
servers:
  - url: http://localhost
paths:
  /customers:
    get:
      summary: Get all customers
      security:
        - apiKeyAuth: []
      responses:
        '200':
          description: Retrieves a list of all the customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'        
    post:
      summary: Create a new customer
      security:
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthorized'        
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /customers/{id}:
    get:
      summary: Get a customer by ID
      security:
        - apiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthorized'        
        '400':
          description: Invalid ID given
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      summary: Delete a customer by ID
      security:
        - apiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Customer deleted successfully
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthorized'  
        '400':
          description: Invalid ID given
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      summary: Update a customer by ID
      security:
        - apiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Customer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthorized'          
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the customer
        firstName:
          type: string
          description: first name
        lastName:
          type: string
          description: last name
        phoneNumber:
          type: string
          description: phone number
        postCode:
          type: string
          description: postal code
        dateOfBirth:
          type: string
          format: date
          description: date of birth
    BadRequest:
      type: object
      properties:
        message:
          type: string
          example: bad request
        code:
          type: integer
          example: 400
    InternalServerError:
      type: object
      properties:
        message:
          type: string
          example: internal server error
        code:
          type: integer
          example: 500
    NotFound:
      type: object
      properties:
        message:
          type: string
          example: Data not found
        code:
          type: integer
          example: 404
    UnAuthorized:
      type: object
      properties:
        message:
          type: string
          example: unauthorized
        code:
          type: integer
          example: 401
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: API-Key
      
